{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinay\\\\Desktop\\\\AG-Grid\\\\my-app\\\\src\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css'; //import 'ag-grid-enterprise';\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Table = () => {\n  _s();\n\n  const [data, setdata] = useState(null);\n  const [gridColumnApi, setGridColumnApi] = useState(null);\n  const [hideColumn, setHideColumn] = useState(false);\n\n  const onGridReady = params => {\n    setdata(params.api);\n    axios.get('https://www.ag-grid.com/example-assets/row-data.json').then(res => res.data).then(res => {\n      params.api.applyTransaction({\n        add: res\n      });\n    });\n    setGridColumnApi(params.columnApi);\n  };\n\n  const columns = [{\n    headerName: \"Make\",\n    field: 'make',\n    checkboxSelection: true,\n    headerCheckboxSelection: true\n  }, {\n    headerName: \"Model\",\n    field: 'model',\n    tooltipField: 'make'\n  }, {\n    headerName: \"Price\",\n    field: 'price',\n    cellStyle: params => params.value > 50000 ? {\n      color: 'green'\n    } : {\n      color: 'red'\n    }\n  }];\n  const defaultColDefs = {\n    sortable: true,\n    editable: true,\n    filter: true,\n    floatingFilter: true,\n    flex: 1\n  };\n\n  const onSelectionChanged = event => {\n    console.log(event.api.getSelectedRows());\n  };\n\n  const onPageChange = pageNum => {\n    data.paginationSetPageSize(pageNum);\n  };\n\n  let buttonText = \"Hide\";\n  hideColumn ? buttonText = \"Show\" : buttonText = \"Hide\";\n\n  const showColumn = () => {\n    gridColumnApi.setColumnsVisible(['model'], hideColumn);\n    setHideColumn(!hideColumn);\n    data.sizeColumnsToFit();\n  };\n\n  const onTextChange = e => {\n    data.setQuickFilter(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"ag-grid\": \"gridOptions\",\n    className: \"ag-theme-alpine\",\n    style: {\n      height: '95vh',\n      width: '95vw'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => onPageChange(e.target.value),\n        style: {\n          width: '100px',\n          height: '25px',\n          borderRadius: \"15PX\",\n          paddingLeft: \"7px\",\n          paddingRight: \"7px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"75\",\n          children: \"75\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: '100px',\n          height: '25px',\n          marginLeft: '10px',\n          backgroundColor: 'white',\n          borderWidth: '1px',\n          borderRadius: \"15PX\"\n        },\n        onClick: showColumn,\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        onChange: e => onTextChange(e),\n        style: {\n          width: '350px',\n          height: '25px',\n          marginLeft: '10px',\n          borderWidth: '1px',\n          borderRadius: \"15PX\",\n          padding: \"7px\"\n        },\n        placeholder: \"Search Here..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n      columnDefs: columns,\n      defaultColDef: defaultColDefs,\n      pagination: true,\n      enableBrowserTooltips: true,\n      onGridReady: onGridReady,\n      rowSelection: \"multiple\",\n      onSelectionChanged: onSelectionChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Table, \"LzgyEyyccASQLkGMy5BsLiBbmBE=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/vinay/Desktop/AG-Grid/my-app/src/Table.js"],"names":["React","useState","AgGridReact","axios","Table","data","setdata","gridColumnApi","setGridColumnApi","hideColumn","setHideColumn","onGridReady","params","api","get","then","res","applyTransaction","add","columnApi","columns","headerName","field","checkboxSelection","headerCheckboxSelection","tooltipField","cellStyle","value","color","defaultColDefs","sortable","editable","filter","floatingFilter","flex","onSelectionChanged","event","console","log","getSelectedRows","onPageChange","pageNum","paginationSetPageSize","buttonText","showColumn","setColumnsVisible","sizeColumnsToFit","onTextChange","e","setQuickFilter","target","height","width","margin","borderRadius","paddingLeft","paddingRight","marginLeft","backgroundColor","borderWidth","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\r\n//import 'ag-grid-enterprise';\r\nimport axios from 'axios';\r\n\r\nconst Table = () => {\r\n    const [data, setdata] = useState(null);\r\n    const [gridColumnApi , setGridColumnApi] = useState(null)\r\n    const [hideColumn , setHideColumn] = useState(false)\r\n    const onGridReady = (params) => {\r\n        setdata(params.api)\r\n        axios.get('https://www.ag-grid.com/example-assets/row-data.json')\r\n        .then(res => res.data).then(res => {\r\n            params.api.applyTransaction({add:res})\r\n        })\r\n        setGridColumnApi(params.columnApi)\r\n    };\r\n\r\n    const columns = [\r\n        {headerName : \"Make\" , field : 'make' , checkboxSelection : true , headerCheckboxSelection : true} ,\r\n        {headerName : \"Model\" , field : 'model' , tooltipField : 'make'} ,\r\n        {headerName : \"Price\" , field : 'price' , cellStyle:((params) => (params.value > 50000 ? {color : 'green'} : {color : 'red'}))}\r\n    ]\r\n    const defaultColDefs = {sortable : true , editable : true , filter : true , floatingFilter : true , flex: 1 }\r\n   \r\n    const onSelectionChanged = (event) => {\r\n        console.log(event.api.getSelectedRows())\r\n    }\r\n    const onPageChange = (pageNum) => {\r\n        data.paginationSetPageSize(pageNum)\r\n    }\r\n\r\n    let buttonText = \"Hide\"\r\n    hideColumn ? buttonText = \"Show\" : buttonText = \"Hide\"\r\n    \r\n    const showColumn = () => {\r\n        gridColumnApi.setColumnsVisible(['model'] , hideColumn)\r\n        setHideColumn(!hideColumn)\r\n        data.sizeColumnsToFit()\r\n        \r\n    }\r\n    const onTextChange = (e) => {\r\n        data.setQuickFilter(e.target.value)\r\n    } \r\n    return(\r\n      <div ag-grid=\"gridOptions\" className='ag-theme-alpine' style={{height : '95vh' , width : '95vw'}}>\r\n        <div style={{margin: \"10px\"}}>\r\n         <select onChange={(e) => onPageChange(e.target.value)} style={{width : '100px' , height : '25px', borderRadius: \"15PX\", paddingLeft: \"7px\", paddingRight: \"7px\"}}>\r\n              <option value='25'>25</option>\r\n              <option value='50'>50</option>\r\n              <option value='75'>75</option>\r\n              <option value='100'>100</option>\r\n          </select>\r\n          <button style = {{width : '100px' , height : '25px' , marginLeft : '10px' , backgroundColor : 'white' , borderWidth : '1px', borderRadius: \"15PX\"}} onClick={showColumn}>{buttonText}</button>\r\n          <input type = 'search' onChange={(e) => onTextChange(e)} style = {{width : '350px' , height : '25px' , marginLeft : '10px' , borderWidth : '1px', borderRadius: \"15PX\", padding: \"7px\"}} placeholder='Search Here..' />\r\n        </div>\r\n        <AgGridReact\r\n          columnDefs = {columns}\r\n          defaultColDef = {defaultColDefs}\r\n          pagination = {true}\r\n          enableBrowserTooltips = {true}\r\n          onGridReady = {onGridReady}\r\n          rowSelection = 'multiple'\r\n          onSelectionChanged = {onSelectionChanged}\r\n          />\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Table"]},"metadata":{},"sourceType":"module"}