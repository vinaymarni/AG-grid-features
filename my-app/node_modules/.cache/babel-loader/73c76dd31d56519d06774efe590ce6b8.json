{"ast":null,"code":"// ag-grid-react v26.2.0\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ag_grid_community_1 = require(\"ag-grid-community\");\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar agGridColumn_1 = require(\"../shared/agGridColumn\");\n\nvar changeDetectionService_1 = require(\"../shared/changeDetectionService\");\n\nvar newReactComponent_1 = require(\"../shared/newReactComponent\");\n\nvar portalManager_1 = require(\"../shared/portalManager\");\n\nvar gridComp_1 = __importDefault(require(\"./gridComp\"));\n\nvar reactFrameworkOverrides_1 = require(\"./reactFrameworkOverrides\");\n\nvar AgGridReactUi =\n/** @class */\nfunction (_super) {\n  __extends(AgGridReactUi, _super);\n\n  function AgGridReactUi(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.props = props;\n    _this.destroyFuncs = [];\n    _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n    _this.eGui = react_1.default.createRef();\n    _this.state = {\n      context: undefined\n    };\n    _this.portalManager = new portalManager_1.PortalManager(_this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n    return _this;\n  }\n\n  AgGridReactUi.prototype.render = function () {\n    return react_1.default.createElement(\"div\", {\n      style: this.createStyleForDiv(),\n      className: this.props.className,\n      ref: this.eGui\n    }, this.state.context && react_1.default.createElement(gridComp_1.default, {\n      context: this.state.context\n    }), this.portalManager.getPortals());\n  };\n\n  AgGridReactUi.prototype.createStyleForDiv = function () {\n    return __assign({\n      height: '100%'\n    }, this.props.containerStyle || {});\n  };\n\n  AgGridReactUi.prototype.componentDidMount = function () {\n    var _this = this;\n\n    var modules = this.props.modules || [];\n    var gridParams = {\n      providedBeanInstances: {\n        frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this.portalManager)\n      },\n      modules: modules,\n      frameworkOverrides: new reactFrameworkOverrides_1.ReactFrameworkOverrides()\n    };\n    this.gridOptions = __assign({}, this.props.gridOptions);\n    var children = this.props.children;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n      this.gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n    }\n\n    this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(this.gridOptions, this.props); // don't need the return value\n\n    var gridCoreCreator = new ag_grid_community_1.GridCoreCreator();\n    gridCoreCreator.create(this.eGui.current, this.gridOptions, function (context) {\n      _this.setState({\n        context: context\n      });\n    }, gridParams);\n    this.destroyFuncs.push(function () {\n      return _this.gridOptions.api.destroy();\n    });\n    this.api = this.gridOptions.api;\n    this.columnApi = this.gridOptions.columnApi;\n    this.props.setGridApi(this.api, this.columnApi);\n  };\n\n  AgGridReactUi.prototype.componentWillUnmount = function () {\n    this.destroyFuncs.forEach(function (f) {\n      return f();\n    });\n  };\n\n  AgGridReactUi.prototype.componentDidUpdate = function (prevProps) {\n    this.processPropsChanges(prevProps, this.props);\n  };\n\n  AgGridReactUi.prototype.processPropsChanges = function (prevProps, nextProps) {\n    var changes = {};\n    this.extractGridPropertyChanges(prevProps, nextProps, changes);\n    this.extractDeclarativeColDefChanges(nextProps, changes);\n    this.processChanges(changes);\n  };\n\n  AgGridReactUi.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n    // if columnDefs are provided on gridOptions we use those - you can't combine both\n    // we also skip if columnDefs are provided as a prop directly on AgGridReact\n    if (this.props.gridOptions && this.props.gridOptions.columnDefs || this.props.columnDefs) {\n      return;\n    }\n\n    var debugLogging = !!nextProps.debug;\n    var propKey = 'columnDefs';\n    var currentColDefs = this.gridOptions.columnDefs;\n\n    if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n      var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n      var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n\n      if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n        if (debugLogging) {\n          console.log(\"agGridReact: colDefs definitions changed\");\n        }\n\n        changes[propKey] = {\n          previousValue: currentColDefs,\n          currentValue: newColDefs\n        };\n      }\n    } else if (currentColDefs && currentColDefs.length > 0) {\n      changes[propKey] = {\n        previousValue: currentColDefs,\n        currentValue: []\n      };\n    }\n  };\n\n  AgGridReactUi.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n    var _this = this;\n\n    var debugLogging = !!nextProps.debug;\n    Object.keys(nextProps).forEach(function (propKey) {\n      if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n        var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n\n        if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n          if (debugLogging) {\n            console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n          }\n\n          changes[propKey] = {\n            previousValue: prevProps[propKey],\n            currentValue: nextProps[propKey]\n          };\n        }\n      }\n    });\n    ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n      if (prevProps[funcName] !== nextProps[funcName]) {\n        if (debugLogging) {\n          console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n        }\n\n        changes[funcName] = {\n          previousValue: prevProps[funcName],\n          currentValue: nextProps[funcName]\n        };\n      }\n    });\n  };\n\n  AgGridReactUi.prototype.processChanges = function (changes) {\n    if (this.api) {\n      ag_grid_community_1.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n    }\n  };\n\n  AgGridReactUi.prototype.getStrategyTypeForProp = function (propKey) {\n    if (propKey === 'rowData') {\n      if (this.props.rowDataChangeDetectionStrategy) {\n        return this.props.rowDataChangeDetectionStrategy;\n      }\n\n      if (this.isImmutableDataActive()) {\n        return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n      }\n    } // all other cases will default to DeepValueCheck\n\n\n    return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n  };\n\n  AgGridReactUi.prototype.isImmutableDataActive = function () {\n    return this.props.deltaRowDataMode || this.props.immutableData || this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData);\n  };\n\n  return AgGridReactUi;\n}(react_1.Component);\n\nexports.AgGridReactUi = AgGridReactUi;\n\nvar ReactFrameworkComponentWrapper =\n/** @class */\nfunction (_super) {\n  __extends(ReactFrameworkComponentWrapper, _super);\n\n  function ReactFrameworkComponentWrapper(parent) {\n    var _this = _super.call(this) || this;\n\n    _this.parent = parent;\n    return _this;\n  }\n\n  ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n    return new newReactComponent_1.NewReactComponent(UserReactComponent, this.parent, componentType);\n  };\n\n  ReactFrameworkComponentWrapper.prototype.unwrap = function (comp) {\n    if (comp && comp.getFrameworkComponentInstance) {\n      return comp.getFrameworkComponentInstance();\n    }\n\n    return comp;\n  };\n\n  return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper);","map":{"version":3,"sources":["C:/Users/vinay/Desktop/AG-Grid/my-app/node_modules/ag-grid-react/lib/reactUi/agGridReactUi.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__importStar","mod","__esModule","result","k","__importDefault","defineProperty","exports","value","ag_grid_community_1","require","react_1","agGridColumn_1","changeDetectionService_1","newReactComponent_1","portalManager_1","gridComp_1","reactFrameworkOverrides_1","AgGridReactUi","_super","props","_this","destroyFuncs","changeDetectionService","ChangeDetectionService","eGui","default","createRef","state","context","undefined","portalManager","PortalManager","componentWrappingElement","maxComponentCreationTimeMs","render","createElement","style","createStyleForDiv","className","ref","getPortals","height","containerStyle","componentDidMount","modules","gridParams","providedBeanInstances","frameworkComponentWrapper","ReactFrameworkComponentWrapper","frameworkOverrides","ReactFrameworkOverrides","gridOptions","children","AgGridColumn","hasChildColumns","columnDefs","mapChildColumnDefs","ComponentUtil","copyAttributesToGridOptions","gridCoreCreator","GridCoreCreator","current","setState","push","api","destroy","columnApi","setGridApi","componentWillUnmount","forEach","f","componentDidUpdate","prevProps","processPropsChanges","nextProps","changes","extractGridPropertyChanges","extractDeclarativeColDefChanges","processChanges","debugLogging","debug","propKey","currentColDefs","detectionStrategy","getStrategy","getStrategyTypeForProp","newColDefs","areEqual","console","log","previousValue","currentValue","keys","_","includes","ALL_PROPERTIES","changeDetectionStrategy","getEventCallbacks","funcName","processOnChange","rowDataChangeDetectionStrategy","isImmutableDataActive","ChangeDetectionStrategyType","IdentityCheck","DeepValueCheck","deltaRowDataMode","immutableData","Component","parent","createWrapper","UserReactComponent","componentType","NewReactComponent","unwrap","comp","getFrameworkComponentInstance","BaseComponentWrapper"],"mappings":"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","sourcesContent":["// ag-grid-react v26.2.0\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ag_grid_community_1 = require(\"ag-grid-community\");\nvar react_1 = __importStar(require(\"react\"));\nvar agGridColumn_1 = require(\"../shared/agGridColumn\");\nvar changeDetectionService_1 = require(\"../shared/changeDetectionService\");\nvar newReactComponent_1 = require(\"../shared/newReactComponent\");\nvar portalManager_1 = require(\"../shared/portalManager\");\nvar gridComp_1 = __importDefault(require(\"./gridComp\"));\nvar reactFrameworkOverrides_1 = require(\"./reactFrameworkOverrides\");\nvar AgGridReactUi = /** @class */ (function (_super) {\n    __extends(AgGridReactUi, _super);\n    function AgGridReactUi(props) {\n        var _this = _super.call(this, props) || this;\n        _this.props = props;\n        _this.destroyFuncs = [];\n        _this.changeDetectionService = new changeDetectionService_1.ChangeDetectionService();\n        _this.eGui = react_1.default.createRef();\n        _this.state = { context: undefined };\n        _this.portalManager = new portalManager_1.PortalManager(_this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n        return _this;\n    }\n    AgGridReactUi.prototype.render = function () {\n        return (react_1.default.createElement(\"div\", { style: this.createStyleForDiv(), className: this.props.className, ref: this.eGui },\n            this.state.context && react_1.default.createElement(gridComp_1.default, { context: this.state.context }),\n            this.portalManager.getPortals()));\n    };\n    AgGridReactUi.prototype.createStyleForDiv = function () {\n        return __assign({ height: '100%' }, (this.props.containerStyle || {}));\n    };\n    AgGridReactUi.prototype.componentDidMount = function () {\n        var _this = this;\n        var modules = this.props.modules || [];\n        var gridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this.portalManager)\n            },\n            modules: modules,\n            frameworkOverrides: new reactFrameworkOverrides_1.ReactFrameworkOverrides()\n        };\n        this.gridOptions = __assign({}, this.props.gridOptions);\n        var children = this.props.children;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(children)) {\n            this.gridOptions.columnDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(children);\n        }\n        this.gridOptions = ag_grid_community_1.ComponentUtil.copyAttributesToGridOptions(this.gridOptions, this.props);\n        // don't need the return value\n        var gridCoreCreator = new ag_grid_community_1.GridCoreCreator();\n        gridCoreCreator.create(this.eGui.current, this.gridOptions, function (context) {\n            _this.setState({ context: context });\n        }, gridParams);\n        this.destroyFuncs.push(function () { return _this.gridOptions.api.destroy(); });\n        this.api = this.gridOptions.api;\n        this.columnApi = this.gridOptions.columnApi;\n        this.props.setGridApi(this.api, this.columnApi);\n    };\n    AgGridReactUi.prototype.componentWillUnmount = function () {\n        this.destroyFuncs.forEach(function (f) { return f(); });\n    };\n    AgGridReactUi.prototype.componentDidUpdate = function (prevProps) {\n        this.processPropsChanges(prevProps, this.props);\n    };\n    AgGridReactUi.prototype.processPropsChanges = function (prevProps, nextProps) {\n        var changes = {};\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n        this.extractDeclarativeColDefChanges(nextProps, changes);\n        this.processChanges(changes);\n    };\n    AgGridReactUi.prototype.extractDeclarativeColDefChanges = function (nextProps, changes) {\n        // if columnDefs are provided on gridOptions we use those - you can't combine both\n        // we also skip if columnDefs are provided as a prop directly on AgGridReact\n        if ((this.props.gridOptions && this.props.gridOptions.columnDefs) || this.props.columnDefs) {\n            return;\n        }\n        var debugLogging = !!nextProps.debug;\n        var propKey = 'columnDefs';\n        var currentColDefs = this.gridOptions.columnDefs;\n        if (agGridColumn_1.AgGridColumn.hasChildColumns(nextProps.children)) {\n            var detectionStrategy = this.changeDetectionService.getStrategy(this.getStrategyTypeForProp(propKey));\n            var newColDefs = agGridColumn_1.AgGridColumn.mapChildColumnDefs(nextProps.children);\n            if (!detectionStrategy.areEqual(currentColDefs, newColDefs)) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: colDefs definitions changed\");\n                }\n                changes[propKey] =\n                    {\n                        previousValue: currentColDefs,\n                        currentValue: newColDefs\n                    };\n            }\n        }\n        else if (currentColDefs && currentColDefs.length > 0) {\n            changes[propKey] =\n                {\n                    previousValue: currentColDefs,\n                    currentValue: []\n                };\n        }\n    };\n    AgGridReactUi.prototype.extractGridPropertyChanges = function (prevProps, nextProps, changes) {\n        var _this = this;\n        var debugLogging = !!nextProps.debug;\n        Object.keys(nextProps).forEach(function (propKey) {\n            if (ag_grid_community_1._.includes(ag_grid_community_1.ComponentUtil.ALL_PROPERTIES, propKey)) {\n                var changeDetectionStrategy = _this.changeDetectionService.getStrategy(_this.getStrategyTypeForProp(propKey));\n                if (!changeDetectionStrategy.areEqual(prevProps[propKey], nextProps[propKey])) {\n                    if (debugLogging) {\n                        console.log(\"agGridReact: [\" + propKey + \"] property changed\");\n                    }\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n        ag_grid_community_1.ComponentUtil.getEventCallbacks().forEach(function (funcName) {\n            if (prevProps[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(\"agGridReact: [\" + funcName + \"] event callback changed\");\n                }\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    };\n    AgGridReactUi.prototype.processChanges = function (changes) {\n        if (this.api) {\n            ag_grid_community_1.ComponentUtil.processOnChange(changes, this.gridOptions, this.api, this.columnApi);\n        }\n    };\n    AgGridReactUi.prototype.getStrategyTypeForProp = function (propKey) {\n        if (propKey === 'rowData') {\n            if (this.props.rowDataChangeDetectionStrategy) {\n                return this.props.rowDataChangeDetectionStrategy;\n            }\n            if (this.isImmutableDataActive()) {\n                return changeDetectionService_1.ChangeDetectionStrategyType.IdentityCheck;\n            }\n        }\n        // all other cases will default to DeepValueCheck\n        return changeDetectionService_1.ChangeDetectionStrategyType.DeepValueCheck;\n    };\n    AgGridReactUi.prototype.isImmutableDataActive = function () {\n        return (this.props.deltaRowDataMode || this.props.immutableData) ||\n            (this.props.gridOptions && (this.props.gridOptions.deltaRowDataMode || this.props.gridOptions.immutableData));\n    };\n    return AgGridReactUi;\n}(react_1.Component));\nexports.AgGridReactUi = AgGridReactUi;\nvar ReactFrameworkComponentWrapper = /** @class */ (function (_super) {\n    __extends(ReactFrameworkComponentWrapper, _super);\n    function ReactFrameworkComponentWrapper(parent) {\n        var _this = _super.call(this) || this;\n        _this.parent = parent;\n        return _this;\n    }\n    ReactFrameworkComponentWrapper.prototype.createWrapper = function (UserReactComponent, componentType) {\n        return new newReactComponent_1.NewReactComponent(UserReactComponent, this.parent, componentType);\n    };\n    ReactFrameworkComponentWrapper.prototype.unwrap = function (comp) {\n        if (comp && comp.getFrameworkComponentInstance) {\n            return comp.getFrameworkComponentInstance();\n        }\n        return comp;\n    };\n    return ReactFrameworkComponentWrapper;\n}(ag_grid_community_1.BaseComponentWrapper));\n"]},"metadata":{},"sourceType":"script"}